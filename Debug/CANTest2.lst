   1                             		.file	"CANTest2.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.can0_switch_mode,"ax",@progbits
   5                             		.global	_can0_switch_mode
   7                             	_can0_switch_mode:
   8                             	.LFB0:
   9                             		.file 1 "../src/CANTest2.c"
   1:../src/CANTest2.c **** /***************************************************************/
   2:../src/CANTest2.c **** /*                                                             */
   3:../src/CANTest2.c **** /*      PROJECT NAME :  CANTest2                               */
   4:../src/CANTest2.c **** /*      FILE         :  CANTest2.c                             */
   5:../src/CANTest2.c **** /*      DESCRIPTION  :  Main Program                           */
   6:../src/CANTest2.c **** /*                                                             */
   7:../src/CANTest2.c **** /*      This file was generated by e2 studio.                  */
   8:../src/CANTest2.c **** /*                                                             */
   9:../src/CANTest2.c **** /***************************************************************/
  10:../src/CANTest2.c **** 
  11:../src/CANTest2.c **** #include <iodefine.h>
  12:../src/CANTest2.c **** 
  13:../src/CANTest2.c **** #define TIMEOUT_COUNTER_DEFAULT 0x20000
  14:../src/CANTest2.c **** 
  15:../src/CANTest2.c **** #define RESULT_OK 0
  16:../src/CANTest2.c **** #define RESULT_ERROR 1
  17:../src/CANTest2.c **** #define RESULT_TIMEOUT 2
  18:../src/CANTest2.c **** #define RESULT_INVALID -1
  19:../src/CANTest2.c **** 
  20:../src/CANTest2.c **** #define CAN_MODE_OPERATE 0
  21:../src/CANTest2.c **** #define CAN_MODE_RESET 1
  22:../src/CANTest2.c **** #define CAN_MODE_HALT 2
  23:../src/CANTest2.c **** #define CAN_MODE_FORCE_RESET 3
  24:../src/CANTest2.c **** 
  25:../src/CANTest2.c **** #ifdef CPPAPP
  26:../src/CANTest2.c **** //Initialize global constructors
  27:../src/CANTest2.c **** extern void __main()
  28:../src/CANTest2.c **** {
  29:../src/CANTest2.c ****   static int initialized;
  30:../src/CANTest2.c ****   if (! initialized)
  31:../src/CANTest2.c ****     {
  32:../src/CANTest2.c ****       typedef void (*pfunc) ();
  33:../src/CANTest2.c ****       extern pfunc __ctors[];
  34:../src/CANTest2.c ****       extern pfunc __ctors_end[];
  35:../src/CANTest2.c ****       pfunc *p;
  36:../src/CANTest2.c **** 
  37:../src/CANTest2.c ****       initialized = 1;
  38:../src/CANTest2.c ****       for (p = __ctors_end; p > __ctors; )
  39:../src/CANTest2.c ****     (*--p) ();
  40:../src/CANTest2.c **** 
  41:../src/CANTest2.c ****     }
  42:../src/CANTest2.c **** }
  43:../src/CANTest2.c **** #endif 
  44:../src/CANTest2.c **** 
  45:../src/CANTest2.c **** int can0_switch_mode(int mode_code)
  46:../src/CANTest2.c **** {
  10                             		.loc 1 46 0
  11 0000 7E A6                   		push.l	r6
  12                             	.LCFI0:
  13 0002 71 06 F8                		add	#-8, r0, r6
  14                             	.LCFI1:
  15 0005 EF 60                   		mov.L	r6, r0
  16                             	.LCFI2:
  17 0007 A0 69                   		mov.L	r1, 4[r6]
  47:../src/CANTest2.c **** 	int timeout_counter = TIMEOUT_COUNTER_DEFAULT;
  18                             		.loc 1 47 0
  19 0009 F8 6E 00 00 02          		mov.L	#0x20000, [r6]
  48:../src/CANTest2.c **** 
  49:../src/CANTest2.c **** 	switch (mode_code)
  20                             		.loc 1 49 0
  21 000e A8 6D                   		mov.L	4[r6], r5
  22 0010 61 15                   		cmp	#1, r5
  23 0012 3A F3 00                		beq	.L3
  24 0015 61 25                   		cmp	#2, r5
  25 0017 3A A2 00                		beq	.L4
  26 001a 61 05                   		cmp	#0, r5
  27 001c 3B 33 01                		bne	.L20
  50:../src/CANTest2.c **** 	{
  51:../src/CANTest2.c **** 	case CAN_MODE_OPERATE:
  52:../src/CANTest2.c **** 		MSTP(CAN0) = 0;
  28                             		.loc 1 52 0
  29 001f FB 5E 00 00 08          		mov.L	#0x80000, r5
  30 0024 A9 5C                   		mov.L	20[r5], r4
  31 0026 75 24 FE                		and	#-2, r4
  32 0029 A1 5C                   		mov.L	r4, 20[r5]
  53:../src/CANTest2.c **** 		while (MSTP(CAN0) && (--timeout_counter != 0))
  33                             		.loc 1 53 0
  34 002b 03                      		nop
  35                             	.L7:
  36                             		.loc 1 53 0 is_stmt 0 discriminator 1
  37 002c FB 5E 00 00 08          		mov.L	#0x80000, r5
  38 0031 A9 5D                   		mov.L	20[r5], r5
  39 0033 64 15                   		and	#1, r5
  40 0035 5B 55                   		movu.B	r5, r5
  41 0037 61 05                   		cmp	#0, r5
  42 0039 20 0E                   		beq	.L6
  43                             		.loc 1 53 0 discriminator 2
  44 003b EC 65                   		mov.L	[r6], r5
  45 003d 60 15                   		sub	#1, r5
  46 003f E3 65                   		mov.L	r5, [r6]
  47 0041 EC 65                   		mov.L	[r6], r5
  48 0043 61 05                   		cmp	#0, r5
  49 0045 21 E7                   		bne	.L7
  50                             	.L6:
  54:../src/CANTest2.c **** 			;
  55:../src/CANTest2.c **** 		if (timeout_counter == 0)
  51                             		.loc 1 55 0 is_stmt 1
  52 0047 EC 65                   		mov.L	[r6], r5
  53 0049 61 05                   		cmp	#0, r5
  54 004b 1E                      		bne	.L8
  56:../src/CANTest2.c **** 			return RESULT_TIMEOUT;
  55                             		.loc 1 56 0
  56 004c 66 25                   		mov.L	#2, r5
  57 004e 38 04 01                		bra	.L9
  58                             	.L8:
  57:../src/CANTest2.c **** 
  58:../src/CANTest2.c **** 		timeout_counter = TIMEOUT_COUNTER_DEFAULT;
  59                             		.loc 1 58 0
  60 0051 F8 6E 00 00 02          		mov.L	#0x20000, [r6]
  59:../src/CANTest2.c **** 		CAN0.CTLR.BIT.CANM = mode_code;
  61                             		.loc 1 59 0
  62 0056 FB 5E 00 02 09          		mov.L	#0x90200, r5
  63 005b A8 6C                   		mov.L	4[r6], r4
  64 005d 64 34                   		and	#3, r4
  65 005f 5B 44                   		movu.B	r4, r4
  66 0061 64 34                   		and	#3, r4
  67 0063 6C 84                   		shll	#8, r4
  68 0065 DE 53 20 03             		mov.W	1600[r5], r3
  69 0069 76 23 FF FC             		and	#0xfffffcff, r3
  70 006d 57 34                   		or	r3, r4
  71 006f DB 54 20 03             		mov.W	r4, 1600[r5]
  60:../src/CANTest2.c **** 		while ((CAN0.STR.BIT.RSTST || CAN0.STR.BIT.HLTST) && (--timeout_counter != 0))
  72                             		.loc 1 60 0
  73 0073 03                      		nop
  74                             	.L12:
  75                             		.loc 1 60 0 is_stmt 0 discriminator 1
  76 0074 FB 5E 00 02 09          		mov.L	#0x90200, r5
  77 0079 DE 55 21 03             		mov.W	1602[r5], r5
  78 007d 5F 55                   		movu.W	r5, r5
  79 007f 68 85                   		shlr	#8, r5
  80 0081 64 15                   		and	#1, r5
  81 0083 5B 55                   		movu.B	r5, r5
  82 0085 61 05                   		cmp	#0, r5
  83 0087 21 17                   		bne	.L10
  84                             		.loc 1 60 0 discriminator 3
  85 0089 FB 5E 00 02 09          		mov.L	#0x90200, r5
  86 008e DE 55 21 03             		mov.W	1602[r5], r5
  87 0092 5F 55                   		movu.W	r5, r5
  88 0094 68 95                   		shlr	#9, r5
  89 0096 64 15                   		and	#1, r5
  90 0098 5B 55                   		movu.B	r5, r5
  91 009a 61 05                   		cmp	#0, r5
  92 009c 20 0E                   		beq	.L11
  93                             	.L10:
  94                             		.loc 1 60 0 discriminator 2
  95 009e EC 65                   		mov.L	[r6], r5
  96 00a0 60 15                   		sub	#1, r5
  97 00a2 E3 65                   		mov.L	r5, [r6]
  98 00a4 EC 65                   		mov.L	[r6], r5
  99 00a6 61 05                   		cmp	#0, r5
 100 00a8 21 CC                   		bne	.L12
 101                             	.L11:
  61:../src/CANTest2.c **** 			;
  62:../src/CANTest2.c **** 		if (timeout_counter == 0)
 102                             		.loc 1 62 0 is_stmt 1
 103 00aa EC 65                   		mov.L	[r6], r5
 104 00ac 61 05                   		cmp	#0, r5
 105 00ae 1E                      		bne	.L13
  63:../src/CANTest2.c **** 			return RESULT_TIMEOUT;
 106                             		.loc 1 63 0
 107 00af 66 25                   		mov.L	#2, r5
 108 00b1 38 A1 00                		bra	.L9
 109                             	.L13:
  64:../src/CANTest2.c **** 
  65:../src/CANTest2.c **** 		return RESULT_OK;
 110                             		.loc 1 65 0
 111 00b4 66 05                   		mov.L	#0, r5
 112 00b6 38 9C 00                		bra	.L9
 113                             	.L4:
  66:../src/CANTest2.c **** 
  67:../src/CANTest2.c **** 	case CAN_MODE_HALT:
  68:../src/CANTest2.c **** 		CAN0.CTLR.BIT.CANM = mode_code;
 114                             		.loc 1 68 0
 115 00b9 FB 5E 00 02 09          		mov.L	#0x90200, r5
 116 00be A8 6C                   		mov.L	4[r6], r4
 117 00c0 64 34                   		and	#3, r4
 118 00c2 5B 44                   		movu.B	r4, r4
 119 00c4 64 34                   		and	#3, r4
 120 00c6 6C 84                   		shll	#8, r4
 121 00c8 DE 53 20 03             		mov.W	1600[r5], r3
 122 00cc 76 23 FF FC             		and	#0xfffffcff, r3
 123 00d0 57 34                   		or	r3, r4
 124 00d2 DB 54 20 03             		mov.W	r4, 1600[r5]
  69:../src/CANTest2.c **** 		while ((!CAN0.STR.BIT.HLTST) && (--timeout_counter != 0))
 125                             		.loc 1 69 0
 126 00d6 03                      		nop
 127                             	.L15:
 128                             		.loc 1 69 0 is_stmt 0 discriminator 1
 129 00d7 FB 5E 00 02 09          		mov.L	#0x90200, r5
 130 00dc DE 55 21 03             		mov.W	1602[r5], r5
 131 00e0 5F 55                   		movu.W	r5, r5
 132 00e2 68 95                   		shlr	#9, r5
 133 00e4 64 15                   		and	#1, r5
 134 00e6 5B 55                   		movu.B	r5, r5
 135 00e8 61 05                   		cmp	#0, r5
 136 00ea 21 0E                   		bne	.L14
 137                             		.loc 1 69 0 discriminator 2
 138 00ec EC 65                   		mov.L	[r6], r5
 139 00ee 60 15                   		sub	#1, r5
 140 00f0 E3 65                   		mov.L	r5, [r6]
 141 00f2 EC 65                   		mov.L	[r6], r5
 142 00f4 61 05                   		cmp	#0, r5
 143 00f6 21 E1                   		bne	.L15
 144                             	.L14:
  70:../src/CANTest2.c **** 			;
  71:../src/CANTest2.c **** 		if (timeout_counter == 0)
 145                             		.loc 1 71 0 is_stmt 1
 146 00f8 EC 65                   		mov.L	[r6], r5
 147 00fa 61 05                   		cmp	#0, r5
 148 00fc 1D                      		bne	.L16
  72:../src/CANTest2.c **** 			return RESULT_TIMEOUT;
 149                             		.loc 1 72 0
 150 00fd 66 25                   		mov.L	#2, r5
 151 00ff 2E 53                   		bra	.L9
 152                             	.L16:
  73:../src/CANTest2.c **** 
  74:../src/CANTest2.c **** 		return RESULT_OK;
 153                             		.loc 1 74 0
 154 0101 66 05                   		mov.L	#0, r5
 155 0103 2E 4F                   		bra	.L9
 156                             	.L3:
  75:../src/CANTest2.c **** 
  76:../src/CANTest2.c **** 	case CAN_MODE_RESET:
  77:../src/CANTest2.c **** 		CAN0.CTLR.BIT.CANM = mode_code;
 157                             		.loc 1 77 0
 158 0105 FB 5E 00 02 09          		mov.L	#0x90200, r5
 159 010a A8 6C                   		mov.L	4[r6], r4
 160 010c 64 34                   		and	#3, r4
 161 010e 5B 44                   		movu.B	r4, r4
 162 0110 64 34                   		and	#3, r4
 163 0112 6C 84                   		shll	#8, r4
 164 0114 DE 53 20 03             		mov.W	1600[r5], r3
 165 0118 76 23 FF FC             		and	#0xfffffcff, r3
 166 011c 57 34                   		or	r3, r4
 167 011e DB 54 20 03             		mov.W	r4, 1600[r5]
  78:../src/CANTest2.c **** 		while ((!CAN0.STR.BIT.RSTST) && (--timeout_counter != 0))
 168                             		.loc 1 78 0
 169 0122 03                      		nop
 170                             	.L18:
 171                             		.loc 1 78 0 is_stmt 0 discriminator 1
 172 0123 FB 5E 00 02 09          		mov.L	#0x90200, r5
 173 0128 DE 55 21 03             		mov.W	1602[r5], r5
 174 012c 5F 55                   		movu.W	r5, r5
 175 012e 68 85                   		shlr	#8, r5
 176 0130 64 15                   		and	#1, r5
 177 0132 5B 55                   		movu.B	r5, r5
 178 0134 61 05                   		cmp	#0, r5
 179 0136 21 0E                   		bne	.L17
 180                             		.loc 1 78 0 discriminator 2
 181 0138 EC 65                   		mov.L	[r6], r5
 182 013a 60 15                   		sub	#1, r5
 183 013c E3 65                   		mov.L	r5, [r6]
 184 013e EC 65                   		mov.L	[r6], r5
 185 0140 61 05                   		cmp	#0, r5
 186 0142 21 E1                   		bne	.L18
 187                             	.L17:
  79:../src/CANTest2.c **** 			;
  80:../src/CANTest2.c **** 		if (timeout_counter == 0)
 188                             		.loc 1 80 0 is_stmt 1
 189 0144 EC 65                   		mov.L	[r6], r5
 190 0146 61 05                   		cmp	#0, r5
 191 0148 1C                      		bne	.L19
  81:../src/CANTest2.c **** 			return RESULT_TIMEOUT;
 192                             		.loc 1 81 0
 193 0149 66 25                   		mov.L	#2, r5
 194 014b 0F                      		bra	.L9
 195                             	.L19:
  82:../src/CANTest2.c **** 
  83:../src/CANTest2.c **** 		return RESULT_OK;
 196                             		.loc 1 83 0
 197 014c 66 05                   		mov.L	#0, r5
 198 014e 0C                      		bra	.L9
 199                             	.L20:
  84:../src/CANTest2.c **** 
  85:../src/CANTest2.c **** 	default:
  86:../src/CANTest2.c **** 		return RESULT_INVALID;
 200                             		.loc 1 86 0
 201 014f FB 56 FF                		mov.L	#-1, r5
 202                             		.balign 8,3,1
 203                             	.L9:
  87:../src/CANTest2.c **** 	}
  88:../src/CANTest2.c **** }
 204                             		.loc 1 88 0
 205 0152 EF 51                   		mov.L	r5, r1
 206 0154 3F 66 03                		rtsd	#12, r6-r6
 207                             	.LFE0:
 209 0157 03                      		.section	.text.can0_wakeup,"ax",@progbits
 210                             		.global	_can0_wakeup
 212                             	_can0_wakeup:
 213                             	.LFB1:
  89:../src/CANTest2.c **** 
  90:../src/CANTest2.c **** int can0_wakeup(void)
  91:../src/CANTest2.c **** {
 214                             		.loc 1 91 0
 215 0000 7E A6                   		push.l	r6
 216                             	.LCFI3:
 217 0002 71 06 FC                		add	#-4, r0, r6
 218                             	.LCFI4:
 219 0005 EF 60                   		mov.L	r6, r0
 220                             	.LCFI5:
  92:../src/CANTest2.c **** 	int timeout_counter = TIMEOUT_COUNTER_DEFAULT;
 221                             		.loc 1 92 0
 222 0007 F8 6E 00 00 02          		mov.L	#0x20000, [r6]
  93:../src/CANTest2.c **** 
  94:../src/CANTest2.c **** 	CAN0.CTLR.BIT.SLPM = 0;
 223                             		.loc 1 94 0
 224 000c FB 5E 00 02 09          		mov.L	#0x90200, r5
 225 0011 DE 54 20 03             		mov.W	1600[r5], r4
 226 0015 76 24 FF FB             		and	#0xfffffbff, r4
 227 0019 DB 54 20 03             		mov.W	r4, 1600[r5]
  95:../src/CANTest2.c **** 	while ((CAN0.STR.BIT.SLPST) && (--timeout_counter != 0))
 228                             		.loc 1 95 0
 229 001d 03                      		nop
 230                             	.L23:
 231                             		.loc 1 95 0 is_stmt 0 discriminator 1
 232 001e FB 5E 00 02 09          		mov.L	#0x90200, r5
 233 0023 DE 55 21 03             		mov.W	1602[r5], r5
 234 0027 5F 55                   		movu.W	r5, r5
 235 0029 68 A5                   		shlr	#10, r5
 236 002b 64 15                   		and	#1, r5
 237 002d 5B 55                   		movu.B	r5, r5
 238 002f 61 05                   		cmp	#0, r5
 239 0031 20 0E                   		beq	.L22
 240                             		.loc 1 95 0 discriminator 2
 241 0033 EC 65                   		mov.L	[r6], r5
 242 0035 60 15                   		sub	#1, r5
 243 0037 E3 65                   		mov.L	r5, [r6]
 244 0039 EC 65                   		mov.L	[r6], r5
 245 003b 61 05                   		cmp	#0, r5
 246 003d 21 E1                   		bne	.L23
 247                             	.L22:
  96:../src/CANTest2.c **** 		;
  97:../src/CANTest2.c **** 	if (timeout_counter == 0)
 248                             		.loc 1 97 0 is_stmt 1
 249 003f EC 65                   		mov.L	[r6], r5
 250 0041 61 05                   		cmp	#0, r5
 251 0043 1C                      		bne	.L24
  98:../src/CANTest2.c **** 		return RESULT_TIMEOUT;
 252                             		.loc 1 98 0
 253 0044 66 25                   		mov.L	#2, r5
 254 0046 0B                      		bra	.L25
 255                             	.L24:
  99:../src/CANTest2.c **** 
 100:../src/CANTest2.c **** 	return RESULT_OK;
 256                             		.loc 1 100 0
 257 0047 66 05                   		mov.L	#0, r5
 258                             	.L25:
 101:../src/CANTest2.c **** }
 259                             		.loc 1 101 0
 260 0049 EF 51                   		mov.L	r5, r1
 261 004b 3F 66 02                		rtsd	#8, r6-r6
 262                             	.LFE1:
 264                             		.section	.text.can0_sleep,"ax",@progbits
 265                             		.global	_can0_sleep
 267                             	_can0_sleep:
 268                             	.LFB2:
 102:../src/CANTest2.c **** 
 103:../src/CANTest2.c **** int can0_sleep(void)
 104:../src/CANTest2.c **** {
 269                             		.loc 1 104 0
 270 0000 7E A6                   		push.l	r6
 271                             	.LCFI6:
 272 0002 71 06 F8                		add	#-8, r0, r6
 273                             	.LCFI7:
 274 0005 EF 60                   		mov.L	r6, r0
 275                             	.LCFI8:
 105:../src/CANTest2.c **** 	int timeout_counter = TIMEOUT_COUNTER_DEFAULT;
 276                             		.loc 1 105 0
 277 0007 F8 6E 00 00 02          		mov.L	#0x20000, [r6]
 106:../src/CANTest2.c **** 
 107:../src/CANTest2.c **** 	int halt_result = can0_switch_mode(CAN_MODE_HALT);
 278                             		.loc 1 107 0
 279 000c 66 21                   		mov.L	#2, r1
 280 000e 05 00 00 00             		bsr	_can0_switch_mode
 281 0012 A0 69                   		mov.L	r1, 4[r6]
 108:../src/CANTest2.c **** 	if (halt_result != RESULT_OK)
 282                             		.loc 1 108 0
 283 0014 A8 6D                   		mov.L	4[r6], r5
 284 0016 61 05                   		cmp	#0, r5
 285 0018 15                      		beq	.L27
 109:../src/CANTest2.c **** 		return halt_result;
 286                             		.loc 1 109 0
 287 0019 A8 6D                   		mov.L	4[r6], r5
 288 001b 2E 3F                   		bra	.L28
 289                             	.L27:
 110:../src/CANTest2.c **** 
 111:../src/CANTest2.c **** 	CAN0.CTLR.BIT.SLPM = 1;
 290                             		.loc 1 111 0
 291 001d FB 5E 00 02 09          		mov.L	#0x90200, r5
 292 0022 DE 54 20 03             		mov.W	1600[r5], r4
 293 0026 76 34 00 04             		or	#0x400, r4
 294 002a DB 54 20 03             		mov.W	r4, 1600[r5]
 112:../src/CANTest2.c **** 	while ((!CAN0.STR.BIT.SLPST) && (--timeout_counter != 0))
 295                             		.loc 1 112 0
 296 002e 03                      		nop
 297                             	.L30:
 298                             		.loc 1 112 0 is_stmt 0 discriminator 1
 299 002f FB 5E 00 02 09          		mov.L	#0x90200, r5
 300 0034 DE 55 21 03             		mov.W	1602[r5], r5
 301 0038 5F 55                   		movu.W	r5, r5
 302 003a 68 A5                   		shlr	#10, r5
 303 003c 64 15                   		and	#1, r5
 304 003e 5B 55                   		movu.B	r5, r5
 305 0040 61 05                   		cmp	#0, r5
 306 0042 21 0E                   		bne	.L29
 307                             		.loc 1 112 0 discriminator 2
 308 0044 EC 65                   		mov.L	[r6], r5
 309 0046 60 15                   		sub	#1, r5
 310 0048 E3 65                   		mov.L	r5, [r6]
 311 004a EC 65                   		mov.L	[r6], r5
 312 004c 61 05                   		cmp	#0, r5
 313 004e 21 E1                   		bne	.L30
 314                             	.L29:
 113:../src/CANTest2.c **** 		;
 114:../src/CANTest2.c **** 	if (timeout_counter == 0)
 315                             		.loc 1 114 0 is_stmt 1
 316 0050 EC 65                   		mov.L	[r6], r5
 317 0052 61 05                   		cmp	#0, r5
 318 0054 1C                      		bne	.L31
 115:../src/CANTest2.c **** 		return RESULT_TIMEOUT;
 319                             		.loc 1 115 0
 320 0055 66 25                   		mov.L	#2, r5
 321 0057 0B                      		bra	.L28
 322                             	.L31:
 116:../src/CANTest2.c **** 
 117:../src/CANTest2.c **** 	return RESULT_OK;
 323                             		.loc 1 117 0
 324 0058 66 05                   		mov.L	#0, r5
 325                             	.L28:
 118:../src/CANTest2.c **** }
 326                             		.loc 1 118 0
 327 005a EF 51                   		mov.L	r5, r1
 328 005c 3F 66 03                		rtsd	#12, r6-r6
 329                             	.LFE2:
 331                             		.section	.text.main,"ax",@progbits
 332                             		.global	_main
 334                             	_main:
 335                             	.LFB3:
 119:../src/CANTest2.c **** 
 120:../src/CANTest2.c **** int main(void) {
 336                             		.loc 1 120 0
 337 0000 7E A6                   		push.l	r6
 338                             	.LCFI9:
 339 0002 71 06 F8                		add	#-8, r0, r6
 340                             	.LCFI10:
 341 0005 EF 60                   		mov.L	r6, r0
 342                             	.LCFI11:
 121:../src/CANTest2.c **** 	int switch_result = RESULT_OK;
 343                             		.loc 1 121 0
 344 0007 F8 66 00                		mov.L	#0, [r6]
 122:../src/CANTest2.c **** 	int prev_button_state = 1;
 345                             		.loc 1 122 0
 346 000a 3E 61 01                		mov.L	#1, 4[r6]
 123:../src/CANTest2.c **** 
 124:../src/CANTest2.c **** 	MSTP(CAN0) = 0;
 347                             		.loc 1 124 0
 348 000d FB 5E 00 00 08          		mov.L	#0x80000, r5
 349 0012 A9 5C                   		mov.L	20[r5], r4
 350 0014 75 24 FE                		and	#-2, r4
 351 0017 A1 5C                   		mov.L	r4, 20[r5]
 125:../src/CANTest2.c **** 
 126:../src/CANTest2.c **** 	PORTA.DDR.BIT.B2 = 1;
 352                             		.loc 1 126 0
 353 0019 FB 5E 0A C0 08          		mov.L	#0x8c00a, r5
 354 001e CC 54                   		mov.B	[r5], r4
 355 0020 65 44                   		or	#4, r4
 356 0022 C3 54                   		mov.B	r4, [r5]
 127:../src/CANTest2.c **** 	PORTA.DDR.BIT.B3 = 1;
 357                             		.loc 1 127 0
 358 0024 FB 5E 0A C0 08          		mov.L	#0x8c00a, r5
 359 0029 CC 54                   		mov.B	[r5], r4
 360 002b 65 84                   		or	#8, r4
 361 002d C3 54                   		mov.B	r4, [r5]
 128:../src/CANTest2.c **** 	PORTA.DR.BIT.B2 = 1;
 362                             		.loc 1 128 0
 363 002f FB 5E 0A C0 08          		mov.L	#0x8c00a, r5
 364 0034 CD 54 20                		mov.B	32[r5], r4
 365 0037 65 44                   		or	#4, r4
 366 0039 C7 54 20                		mov.B	r4, 32[r5]
 129:../src/CANTest2.c **** 	PORTA.DR.BIT.B3 = 1;
 367                             		.loc 1 129 0
 368 003c FB 5E 0A C0 08          		mov.L	#0x8c00a, r5
 369 0041 CD 54 20                		mov.B	32[r5], r4
 370 0044 65 84                   		or	#8, r4
 371 0046 C7 54 20                		mov.B	r4, 32[r5]
 130:../src/CANTest2.c **** 
 131:../src/CANTest2.c **** 	can0_wakeup();
 372                             		.loc 1 131 0
 373 0049 05 00 00 00             		bsr	_can0_wakeup
 132:../src/CANTest2.c **** 	switch_result = can0_switch_mode(CAN_MODE_RESET);
 374                             		.loc 1 132 0
 375 004d 66 11                   		mov.L	#1, r1
 376 004f 05 00 00 00             		bsr	_can0_switch_mode
 377 0053 E3 61                   		mov.L	r1, [r6]
 133:../src/CANTest2.c **** 	switch_result = can0_switch_mode(CAN_MODE_HALT);
 378                             		.loc 1 133 0
 379 0055 66 21                   		mov.L	#2, r1
 380 0057 05 00 00 00             		bsr	_can0_switch_mode
 381 005b E3 61                   		mov.L	r1, [r6]
 134:../src/CANTest2.c **** 	PORTA.DR.BIT.B2 = !switch_result;
 382                             		.loc 1 134 0
 383 005d FB 5E 0A C0 08          		mov.L	#0x8c00a, r5
 384 0062 EC 64                   		mov.L	[r6], r4
 385 0064 61 04                   		cmp	#0, r4
 386 0066 FC DB 40                		sceq.L	r4
 387 0069 64 14                   		and	#1, r4
 388 006b 6C 24                   		shll	#2, r4
 389 006d CD 53 20                		mov.B	32[r5], r3
 390 0070 75 23 FB                		and	#-5, r3
 391 0073 57 34                   		or	r3, r4
 392 0075 C7 54 20                		mov.B	r4, 32[r5]
 135:../src/CANTest2.c **** 	PORTA.DR.BIT.B3 = CAN0.STR.BIT.HLTST;
 393                             		.loc 1 135 0
 394 0078 FB 5E 0A C0 08          		mov.L	#0x8c00a, r5
 395 007d FB 4E 00 02 09          		mov.L	#0x90200, r4
 396 0082 DE 44 21 03             		mov.W	1602[r4], r4
 397 0086 5F 44                   		movu.W	r4, r4
 398 0088 68 94                   		shlr	#9, r4
 399 008a 64 14                   		and	#1, r4
 400 008c 64 14                   		and	#1, r4
 401 008e 6C 34                   		shll	#3, r4
 402 0090 CD 53 20                		mov.B	32[r5], r3
 403 0093 75 23 F7                		and	#-9, r3
 404 0096 57 34                   		or	r3, r4
 405 0098 C7 54 20                		mov.B	r4, 32[r5]
 406                             	.L33:
 136:../src/CANTest2.c **** 
 137:../src/CANTest2.c ****     while(1) {
 138:../src/CANTest2.c **** 
 139:../src/CANTest2.c ****     }
 407                             		.loc 1 139 0 discriminator 1
 408 009b 2E 00                   		bra	.L33
 409                             	.LFE3:
 521                             	.Letext0:
 522                             		.file 2 "C:/Users/Kosuke/Develop/RX/CANTest2/generate/iodefine.h"
